# This is a basic workflow to help you get started with Actions

name: CreatePullRequest from Neokii

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the 075-kegman-lqr branch
on:
  schedule:
    - cron: '17 18 * * *'
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  pull_from_neokii:
    name: Pull from Neokii
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    if: github.repository == 'jc01rho-openpilot-BoltEV2019-KoKr/boltpilot'
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - uses: actions/checkout@v3 #checkout origin
        with:
          fetch-depth: 0

    # Step 2: run this sync action - specify the upstream repo, upstream branch to sync with, and target sync branch
      - name: Pull (Fast-Forward) upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.2
        with:
          target_sync_branch: hkg_dev
          # REQUIRED 'target_repo_token' exactly like this!
          target_repo_token: ${{ secrets.GITHUB_TOKEN }}
          upstream_sync_branch: hkg_dev
          upstream_sync_repo: neokii/op4


      # Step 4: Print a helpful timestamp for your records (not required, just nice)
      - name: Timestamp
        run: date

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        id: cpr
        with:
          branch: patches-from-neokii-GHactions
          base: feature/0814
          token: ${{ secrets.PAT }}
          reviewers: jc01rho
          assignees: jc01rho

      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ secrets.PAT }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: merge
#      - name: set remote and merge
#        run:  sh -c ' git remote add neokii https://github.com/neokii/op4.git &&  git fetch --progress --recurse-submodules=no neokii +refs/heads/hkg_dev:refs/remotes/neokii/hkg_dev && git merge -X theirs --no-commit neokii/hkg_dev '




