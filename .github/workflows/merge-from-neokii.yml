# This is a basic workflow to help you get started with Actions

name: CreatePullRequest from Neokii

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the 075-kegman-lqr branch
on:
  schedule:
    - cron: '10 23 * * *'
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  pull_from_neokii:
    name: Pull from Neokii
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    if: github.repository == 'jc01rho-openpilot-BoltEV2019-KoKr/boltpilot'
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it


      - uses: actions/checkout@v3 #checkout origin
        with:
          ref: 'feature/0814'

    # Step 2: run this sync action - specify the upstream repo, upstream branch to sync with, and target sync branch
      - name: Pull (Fast-Forward) upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v2.1
        with:
          upstream_repository: neokii/op4
          upstream_branch: hkg_dev
          target_branch: hkg_dev
          git_pull_args: '-s recursive -Xtheirs --allow-unrelated-histories --no-ff'                # optional arg use, defaults to simple 'pull'
          github_token: ${{ secrets.GITHUB_TOKEN }}   # optional, for accessing repos that require authentication

        # Step 3: Display a message if 'sync' step had new commits (simple test)
      - name: Check for new commits
        if: steps.sync.outputs.has_new_commits
        run: echo "There were new commits."

      # Step 4: Print a helpful timestamp for your records (not required, just nice)
      - name: Timestamp
        run: date

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4

#      - name: set remote and merge
#        run:  sh -c ' git remote add neokii https://github.com/neokii/op4.git &&  git fetch --progress --recurse-submodules=no neokii +refs/heads/hkg_dev:refs/remotes/neokii/hkg_dev && git merge -X theirs --no-commit neokii/hkg_dev '





